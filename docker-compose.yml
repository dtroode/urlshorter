services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SERVER_ADDRESS=:8080
      - BASE_URL=http://localhost:8080
      - SHORT_URL_LENGTH=8
      - LOG_LEVEL=INFO
      - FILE_STORAGE_PATH=/tmp/urls
      - DATABASE_DSN=postgres://postgres:postgres@db:5432/urlshorter?sslmode=disable
      - JWT_SECRET_KEY=a-string-secret-at-least-256-bits-long
      - CONCURRENCY_LIMIT=50
      - QUEUE_SIZE=150
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./tmp:/tmp
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=urlshorter
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 3

  loadtest:
    build:
      context: .
      dockerfile: Dockerfile.loadtest
    environment:
      - BASE_URL=http://app:8080
    profiles:
      - loadtest
    depends_on:
      app:
        condition: service_healthy

volumes:
  postgres_data: 