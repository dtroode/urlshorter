basePath: /
definitions:
  request.CreateShortURL:
    description: Request structure for creating a shortened URL
    properties:
      url:
        description: |-
          URL is the original URL to be shortened.
          Must be a valid HTTP/HTTPS URL.
          @Example "https://example.com/very-long-url-path"
        example: https://example.com/very-long-url-path
        type: string
    type: object
  request.CreateShortURLBatch:
    description: Request structure for batch URL shortening operations
    properties:
      correlation_id:
        description: |-
          CorrelationID is a unique identifier for tracking the request in batch operations.
          Used to correlate the response with the original request.
          @Example "req-123"
        example: req-123
        type: string
      original_url:
        description: |-
          OriginalURL is the original URL to be shortened.
          Must be a valid HTTP/HTTPS URL.
          @Example "https://example.com/very-long-url-path"
        example: https://example.com/very-long-url-path
        type: string
    type: object
  response.CreateShortURL:
    description: Response structure for a created shortened URL
    properties:
      result:
        description: |-
          URL is the shortened URL that was created.
          Contains the full shortened URL including the base URL.
          @Example "https://shortener.example.com/abc123"
        example: https://shortener.example.com/abc123
        type: string
    type: object
  response.CreateShortURLBatch:
    description: Response structure for batch URL shortening operations
    properties:
      correlation_id:
        description: |-
          CorrelationID is the unique identifier that was provided in the request.
          Used to correlate the response with the original request.
          @Example "req-123"
        example: req-123
        type: string
      short_url:
        description: |-
          ShortURL is the shortened URL that was created for the original URL.
          Contains the full shortened URL including the base URL.
          @Example "https://shortener.example.com/abc123"
        example: https://shortener.example.com/abc123
        type: string
    type: object
  response.GetUserURL:
    description: Response structure for a user's URL entry
    properties:
      original_url:
        description: |-
          OriginalURL is the original URL that was shortened.
          Contains the full original URL that was provided during creation.
          @Example "https://example.com/very-long-url-path"
        example: https://example.com/very-long-url-path
        type: string
      short_url:
        description: |-
          ShortURL is the shortened URL created by the user.
          Contains the full shortened URL including the base URL.
          @Example "https://shortener.example.com/abc123"
        example: https://shortener.example.com/abc123
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: A URL shortening service API that allows users to create short URLs
    from long ones
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: URL Shortener API
  version: "1.0"
paths:
  /:
    post:
      consumes:
      - text/plain
      description: Creates a shortened URL from the provided plain text URL
      parameters:
      - description: Original URL to shorten
        in: body
        name: url
        required: true
        schema:
          type: string
      produces:
      - text/plain
      responses:
        "201":
          description: Shortened URL created
          schema:
            type: string
        "400":
          description: Bad request - invalid URL
          schema:
            type: string
        "401":
          description: Unauthorized - invalid or missing authentication
          schema:
            type: string
        "409":
          description: URL already exists
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create short URL from plain text
      tags:
      - URLs
  /{id}:
    get:
      consumes:
      - application/json
      description: Redirects to the original URL associated with the provided short
        key
      parameters:
      - description: Short URL identifier
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "307":
          description: Temporary redirect to original URL
          schema:
            type: string
        "400":
          description: Bad request - missing short key
          schema:
            type: string
        "404":
          description: URL not found
          schema:
            type: string
        "410":
          description: URL has been deleted
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get original URL by short key
      tags:
      - URLs
  /api/shorten:
    post:
      consumes:
      - application/json
      description: Creates a shortened URL from the provided JSON request
      parameters:
      - description: URL shortening request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreateShortURL'
      produces:
      - application/json
      responses:
        "201":
          description: Shortened URL created
          schema:
            $ref: '#/definitions/response.CreateShortURL'
        "400":
          description: Bad request - invalid JSON
          schema:
            type: string
        "401":
          description: Unauthorized - invalid or missing authentication
          schema:
            type: string
        "409":
          description: URL already exists
          schema:
            $ref: '#/definitions/response.CreateShortURL'
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create short URL from JSON
      tags:
      - URLs
  /api/shorten/batch:
    post:
      consumes:
      - application/json
      description: Creates multiple shortened URLs from the provided batch request
      parameters:
      - description: Batch URL shortening request
        in: body
        name: request
        required: true
        schema:
          items:
            $ref: '#/definitions/request.CreateShortURLBatch'
          type: array
      produces:
      - application/json
      responses:
        "201":
          description: Shortened URLs created
          schema:
            items:
              $ref: '#/definitions/response.CreateShortURLBatch'
            type: array
        "400":
          description: Bad request - invalid JSON or empty batch
          schema:
            type: string
        "401":
          description: Unauthorized - invalid or missing authentication
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create multiple short URLs in batch
      tags:
      - URLs
  /api/user/urls:
    delete:
      consumes:
      - application/json
      description: Marks the specified URLs as deleted for the authenticated user
      parameters:
      - description: Array of short keys to delete
        in: body
        name: shortKeys
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "202":
          description: URLs marked for deletion
          schema:
            type: string
        "400":
          description: Bad request - invalid JSON
          schema:
            type: string
        "401":
          description: Unauthorized - invalid or missing authentication
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Delete user's URLs
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Retrieves all URLs created by the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: User's URLs
          schema:
            items:
              $ref: '#/definitions/response.GetUserURL'
            type: array
        "204":
          description: No URLs found
          schema:
            type: string
        "401":
          description: Unauthorized - invalid or missing authentication
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get user's URLs
      tags:
      - User
  /ping:
    get:
      consumes:
      - application/json
      description: Check if the service is running and database is accessible
      produces:
      - application/json
      responses:
        "200":
          description: Service is healthy
          schema:
            type: string
        "500":
          description: Service is unhealthy
          schema:
            type: string
      summary: Health check
      tags:
      - Health
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
